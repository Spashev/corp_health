{
    "openapi": "3.0.0",
    "info": {
        "title": "Corporate Health API",
        "description": "Api aplication Corporate Health system",
        "contact": {
            "name": "Corporate Health",
            "email": "corporate_health@health.ru"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "develop"
        }
    ],
    "paths": {
        "api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate admin user",
                "description": "Authenticate admin user",
                "operationId": "Admin authenticate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/auth_user_response"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register admin user",
                "description": "Register admin user",
                "operationId": "Admin register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/auth_user_response"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout admin user",
                "description": "Logout admin user",
                "operationId": "Admin logout",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/auth_user_response"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/auth/generate-password/": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate a random password",
                "description": "This endpoint generates a random password.",
                "operationId": "generatePassword",
                "responses": {
                    "204": {
                        "description": "Password generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "example": "s3cr3tP@ssw0rd"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "{locale}/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate mobile user",
                "description": "Authenticate mobile user",
                "operationId": "Mobile authenticate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/mobile_login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/auth_user_response"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "{locale}/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout mobile user",
                "description": "Logout mobile user",
                "operationId": "Mobile logout",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/auth_user_response"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "api/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get all company",
                "description": "Get all company",
                "operationId": "Companys",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_company_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Update company",
                "description": "Update company",
                "operationId": "Update Company",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_company_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Create company",
                "description": "Create company",
                "operationId": "CreateCompany",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_company_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/companies/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Show company by ID",
                "description": "Show a company by its ID.",
                "operationId": "ShowCompanyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the company",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_company_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete company by ID",
                "description": "Delete a company by its ID.",
                "operationId": "DeleteCompanyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the company to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "api/company/customers": {
            "get": {
                "tags": [
                    "CompanyCustomer"
                ],
                "summary": "Get all customer",
                "description": "Get all customer",
                "operationId": "CompanyCustomers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_customer_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "CompanyCustomer"
                ],
                "summary": "Update customer",
                "description": "Update customer",
                "operationId": "Update CompanyCustomer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_customer_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "CompanyCustomer not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "CompanyCustomer"
                ],
                "summary": "Create customer",
                "description": "Create customer",
                "operationId": "CreateCompanyCustomer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_customer_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/company/customers/{id}": {
            "get": {
                "tags": [
                    "CompanyCustomer"
                ],
                "summary": "Show customer by ID",
                "description": "Show a customer by its ID.",
                "operationId": "ShowCompanyCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_customer_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "CompanyCustomer not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CompanyCustomer"
                ],
                "summary": "Delete customer by ID",
                "description": "Delete a customer by its ID.",
                "operationId": "DeleteCompanyCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "CompanyCustomer not found"
                    }
                }
            }
        },
        "api/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get all country",
                "description": "Get all country",
                "operationId": "Countries",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_country_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update country",
                "description": "Update country",
                "operationId": "Update Country",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_country"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_country_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Create country",
                "description": "Create country",
                "operationId": "CreateCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_country"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_country_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/countries/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Show country by ID",
                "description": "Show a country by its ID.",
                "operationId": "ShowCountryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_country_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete country by ID",
                "description": "Delete a country by its ID.",
                "operationId": "DeleteCountryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            }
        },
        "api/tests/category": {
            "get": {
                "tags": [
                    "TestCategory"
                ],
                "summary": "Get all test categories",
                "description": "Get all test categories",
                "operationId": "TestCategories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_category_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "TestCategory"
                ],
                "summary": "Update test category",
                "description": "Update test category",
                "operationId": "UpdateTestCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_test_category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_category_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test category not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "TestCategory"
                ],
                "summary": "Create test category",
                "description": "Create test category",
                "operationId": "CreateTestCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_test_category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_category_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/tests/category/{id}": {
            "get": {
                "tags": [
                    "TestCategory"
                ],
                "summary": "Show test category",
                "description": "Show test category",
                "operationId": "ShowTestCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_category_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TestCategory"
                ],
                "summary": "Delete test category",
                "description": "Delete test category",
                "operationId": "DeleteTestCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test category not found"
                    }
                }
            }
        },
        "api/tests": {
            "get": {
                "tags": [
                    "Test"
                ],
                "summary": "Get all test",
                "description": "Get all test",
                "operationId": "Tests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Test"
                ],
                "summary": "Update test",
                "description": "Update test",
                "operationId": "Update Test",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_test"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Test"
                ],
                "summary": "Create test",
                "description": "Create test",
                "operationId": "CreateTest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/create_test"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/tests/{id}": {
            "get": {
                "tags": [
                    "Test"
                ],
                "summary": "Show test by ID",
                "description": "Show a test by its ID.",
                "operationId": "ShowTestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/create_test_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Test"
                ],
                "summary": "Delete test by ID",
                "description": "Delete a test by its ID.",
                "operationId": "DeleteTestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Test not found"
                    }
                }
            }
        },
        "/api/administrators": {
            "get": {
                "tags": [
                    "User/Administrator"
                ],
                "summary": "Get all administrators",
                "description": "Get all administrators",
                "operationId": "Administrators",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "User/Administrator"
                ],
                "summary": "Update coordinator",
                "description": "Update coordinator",
                "operationId": "UpdateAdministrator",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "User/Administrator"
                ],
                "summary": "Administrator create",
                "description": "Administrator create",
                "operationId": "AdministratorCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/administrators/{id}": {
            "get": {
                "tags": [
                    "User/Administrator"
                ],
                "summary": "Show coordinator by ID",
                "description": "Show coordinator by its ID.",
                "operationId": "ShowAdministratorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User/Administrator"
                ],
                "summary": "Delete coordinator by ID",
                "description": "Delete coordinator by its ID.",
                "operationId": "DeleteAdministratorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/consultants": {
            "get": {
                "tags": [
                    "User/Consultant"
                ],
                "summary": "Get all consultants",
                "description": "Get all consultants",
                "operationId": "Consultants",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "User/Consultant"
                ],
                "summary": "Update coordinator",
                "description": "Update coordinator",
                "operationId": "UpdateConsultant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "User/Consultant"
                ],
                "summary": "Consultant create",
                "description": "Consultant create",
                "operationId": "ConsultantCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/consultants/{id}": {
            "get": {
                "tags": [
                    "User/Consultant"
                ],
                "summary": "Show coordinator by ID",
                "description": "Show coordinator by its ID.",
                "operationId": "ShowConsultantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User/Consultant"
                ],
                "summary": "Delete coordinator by ID",
                "description": "Delete coordinator by its ID.",
                "operationId": "DeleteConsultantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/coordinators": {
            "get": {
                "tags": [
                    "User/Coordinator"
                ],
                "summary": "Get all coordinators",
                "description": "Get all coordinators",
                "operationId": "Coordinators",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "User/Coordinator"
                ],
                "summary": "Update coordinator",
                "description": "Update coordinator",
                "operationId": "UpdateCoordinator",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "User/Coordinator"
                ],
                "summary": "Coordinator create",
                "description": "Coordinator create",
                "operationId": "CoordinatorCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/admin_register"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/coordinators/{id}": {
            "get": {
                "tags": [
                    "User/Coordinator"
                ],
                "summary": "Show coordinator by ID",
                "description": "Show coordinator by its ID.",
                "operationId": "ShowCoordinatorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User/Coordinator"
                ],
                "summary": "Delete coordinator by ID",
                "description": "Delete coordinator by its ID.",
                "operationId": "DeleteCoordinatorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the test to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/logs": {
            "get": {
                "tags": [
                    "User/Logs"
                ],
                "summary": "Get all users logs",
                "description": "Get all users logs",
                "operationId": "UserActionLogs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_actions_logs_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "api/user/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User me",
                "description": "User me",
                "operationId": "UserMe",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_header"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/users_response"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Bad request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "admin_login": {
                "required": [
                    "login",
                    "password"
                ],
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "admin_register": {
                "required": [
                    "first_name",
                    "last_name",
                    "middle_name",
                    "email",
                    "phone",
                    "role",
                    "access",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "middle_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "CLIENT",
                            "CONSULTANT",
                            "COORDINATOR",
                            "ADMINISTRATOR"
                        ]
                    },
                    "access": {
                        "type": "string",
                        "enum": [
                            "FULL",
                            "MOBIL"
                        ]
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "mobile_login": {
                "required": [
                    "code",
                    "login",
                    "password"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "create_company": {
                "required": [
                    "status",
                    "company_identify",
                    "customer_id",
                    "company_code",
                    "name",
                    "name_en",
                    "contract_period",
                    "signature_date",
                    "feedback_link",
                    "mobile_app",
                    "mobile_company_code",
                    "mobile_manager_code",
                    "mobile_partner_id",
                    "mobile_organization_id",
                    "subsidiaries",
                    "countries",
                    "contacts",
                    "employees",
                    "relatives"
                ],
                "properties": {
                    "company_code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "company_identify": {
                        "type": "string"
                    },
                    "customer_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_en": {
                        "type": "string"
                    },
                    "contract_period": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "signature_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "feedback_link": {
                        "type": "string"
                    },
                    "mobile_app": {
                        "type": "boolean"
                    },
                    "mobile_company_code": {
                        "type": "string"
                    },
                    "mobile_manager_code": {
                        "type": "string"
                    },
                    "mobile_partner_id": {
                        "type": "string"
                    },
                    "mobile_organization_id": {
                        "type": "string"
                    },
                    "subsidiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company_subsidiaries"
                        }
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comapny_countries"
                        }
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company_contract"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company_employee"
                        }
                    },
                    "relatives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company_relative"
                        }
                    }
                },
                "type": "object"
            },
            "create_customer": {
                "required": [
                    "code",
                    "name",
                    "name_en",
                    "partner_id",
                    "start_date",
                    "maintain",
                    "status"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_en": {
                        "type": "string"
                    },
                    "partner_id": {
                        "type": "integer"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "maintain": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "create_country": {
                "required": [
                    "name",
                    "code",
                    "cities"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "cities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cities_create"
                        }
                    }
                },
                "type": "object"
            },
            "create_test_category": {
                "required": [
                    "title",
                    "locale"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    }
                },
                "type": "object"
            },
            "create_test": {
                "required": [
                    "title",
                    "description",
                    "keywords",
                    "locale",
                    "category_id",
                    "is_active",
                    "questions",
                    "results"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/test_question"
                        }
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/test_result"
                        }
                    }
                },
                "type": "object"
            },
            "date": {
                "type": "string",
                "format": "date",
                "example": "2023-01-01"
            },
            "date_time": {
                "type": "string",
                "format": "date-time",
                "example": "2023:01:01 00:00"
            },
            "comapny_city": {
                "required": [
                    "city_id"
                ],
                "properties": {
                    "city_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "company_contract": {
                "required": [
                    "full_name",
                    "phone",
                    "email",
                    "skype",
                    "address"
                ],
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Name",
                        "type": "string"
                    },
                    "skype": {
                        "description": "Name",
                        "type": "string"
                    },
                    "address": {
                        "description": "Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "comapny_countries": {
                "required": [
                    "country_id",
                    "city"
                ],
                "properties": {
                    "country_id": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comapny_city"
                        }
                    }
                },
                "type": "object"
            },
            "company_employee": {
                "required": [
                    "full_time",
                    "part_time",
                    "psychological_consulting",
                    "legal_consulting",
                    "coaching",
                    "concierge_service",
                    "webinars"
                ],
                "properties": {
                    "name": {
                        "type": "boolean"
                    },
                    "part_time": {
                        "type": "boolean"
                    },
                    "psychological_consulting": {
                        "type": "integer"
                    },
                    "legal_consulting": {
                        "type": "integer"
                    },
                    "coaching": {
                        "type": "integer"
                    },
                    "concierge_service": {
                        "type": "integer"
                    },
                    "webinars": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "company_relative": {
                "required": [
                    "customer_category_id",
                    "psychological_consulting",
                    "legal_consulting",
                    "coaching",
                    "concierge_service",
                    "webinars"
                ],
                "properties": {
                    "customer_category_id": {
                        "type": "integer"
                    },
                    "psychological_consulting": {
                        "type": "integer"
                    },
                    "legal_consulting": {
                        "type": "integer"
                    },
                    "coaching": {
                        "type": "integer"
                    },
                    "concierge_service": {
                        "type": "integer"
                    },
                    "webinars": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "company_subsidiaries": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "cities_create": {
                "required": [
                    "name",
                    "postcode"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "county_result": {
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "test_answer": {
                "required": [
                    "answer",
                    "ball",
                    "locale",
                    "question_id"
                ],
                "properties": {
                    "answer": {
                        "type": "string"
                    },
                    "ball": {
                        "type": "integer"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "question_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "test_category": {
                "required": [
                    "title",
                    "locale",
                    "is_active"
                ],
                "properties": {
                    "title": {
                        "description": "Title",
                        "type": "string"
                    },
                    "locale": {
                        "description": "Locale",
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "test_question": {
                "required": [
                    "title",
                    "locale",
                    "test_id"
                ],
                "properties": {
                    "title": {
                        "description": "Title",
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "test_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "test_result": {
                "required": [
                    "ball",
                    "description",
                    "locale",
                    "question_id"
                ],
                "properties": {
                    "ball": {
                        "description": "Ball",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "question_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "create_city_response": {
                "required": [
                    "id",
                    "name",
                    "postcode"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "postcode",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "create_country_response": {
                "required": [
                    "id",
                    "name",
                    "code",
                    "cities"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "cities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/create_city_response"
                        }
                    }
                },
                "type": "object"
            },
            "test_answer_response": {
                "required": [
                    "id",
                    "answer",
                    "ball",
                    "locale",
                    "question_id"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "answer": {
                        "type": "string"
                    },
                    "ball": {
                        "type": "integer"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "question_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "test_category_response": {
                "required": [
                    "id",
                    "title",
                    "locale",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title",
                        "type": "string"
                    },
                    "locale": {
                        "description": "Locale",
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "test_question_response": {
                "required": [
                    "id",
                    "title",
                    "locale",
                    "test_id"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title",
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "test_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "test_result_response": {
                "required": [
                    "id",
                    "ball",
                    "description",
                    "locale",
                    "question_id"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "ball": {
                        "description": "Ball",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "enum": [
                            "kz",
                            "ru",
                            "en",
                            "de",
                            "es",
                            "cn"
                        ]
                    },
                    "question_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "user_log_response": {
                "required": [
                    "id",
                    "full_name",
                    "role",
                    "action",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "user_response": {
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "middle_name",
                    "email",
                    "phone",
                    "role",
                    "access",
                    "created_at",
                    "country_id"
                ],
                "properties": {
                    "id": {
                        "description": "order id",
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "middle_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "CLIENT",
                            "CONSULTANT",
                            "COORDINATOR",
                            "ADMINISTRATOR"
                        ]
                    },
                    "access": {
                        "type": "string",
                        "enum": [
                            "FULL",
                            "MOBIL"
                        ]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "auth_user_response": {
                "description": "Auth user response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/user_response"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "create_company_response": {
                "description": "Customer response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "company_code": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "boolean"
                                },
                                "company_identify": {
                                    "type": "string"
                                },
                                "customer_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "name_en": {
                                    "type": "string"
                                },
                                "contract_period": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "signature_date": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "feedback_link": {
                                    "type": "string"
                                },
                                "mobile_app": {
                                    "type": "boolean"
                                },
                                "mobile_company_code": {
                                    "type": "string"
                                },
                                "mobile_manager_code": {
                                    "type": "string"
                                },
                                "mobile_partner_id": {
                                    "type": "string"
                                },
                                "mobile_organization_id": {
                                    "type": "string"
                                },
                                "subsidiaries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/company_subsidiaries"
                                    }
                                },
                                "countries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/comapny_countries"
                                    }
                                },
                                "contacts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/company_contract"
                                    }
                                },
                                "employees": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/company_employee"
                                    }
                                },
                                "relatives": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/company_relative"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "create_customer_response": {
                "description": "Customer response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "name_en": {
                                    "type": "string"
                                },
                                "partner_id": {
                                    "type": "integer"
                                },
                                "start_date": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "maintain": {
                                    "type": "boolean"
                                },
                                "status": {
                                    "type": "boolean"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "city_result_response": {
                "description": "City response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "postcode": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "create_country_response": {
                "description": "Country response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "cities": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/cities_create"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "create_test_category_response": {
                "description": "Test category response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "locale": {
                                    "type": "string",
                                    "enum": [
                                        "kz",
                                        "ru",
                                        "en",
                                        "de",
                                        "es",
                                        "cn"
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "create_test_response": {
                "description": "Test response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "keywords": {
                                    "type": "string"
                                },
                                "locale": {
                                    "type": "string",
                                    "enum": [
                                        "kz",
                                        "ru",
                                        "en",
                                        "de",
                                        "es",
                                        "cn"
                                    ]
                                },
                                "category_id": {
                                    "type": "integer"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "questions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/test_question_response"
                                    }
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/test_result_response"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "users_actions_logs_response": {
                "description": "User action logs response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/user_log_response"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "users_response": {
                "description": "Test response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/user_response"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "token_header": {
                "name": "token",
                "in": "header",
                "description": "Vendor token",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerToken",
                "in": "header",
                "bearerFormat": "Sanctum",
                "scheme": "bearer"
            }
        }
    }
}